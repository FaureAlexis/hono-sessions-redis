var n=class{prefix;ttl;RedisClient;constructor(t){this.prefix=t.prefix==null?"session:":t.prefix,this.ttl=t.ttl||86400,this.RedisClient=t.client}async getSessionById(t){if(!t)return null;let i=(this.prefix+t).toString(),e=await this.RedisClient.get(i);return e?JSON.parse(e):null}async createSession(t,i){if(!t)return;let e=(this.prefix+t).toString(),s=this.ttl;await this.RedisClient.setex(e,s,JSON.stringify(i))}async deleteSession(t){let i=(this.prefix+t).toString();await this.RedisClient.del(i)}async persistSessionData(t,i){if(!t)return;let e=(this.prefix+t).toString(),s=this.ttl;await this.RedisClient.setex(e,s,JSON.stringify(i))}};export{n as RedisStoreAdapter};
